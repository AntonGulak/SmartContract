
/**
 * This file was generated by TONDev.
 * TONDev is a part of TON OS (see http://ton.dev).
 */
pragma ton-solidity >= 0.35.0;
pragma AbiHeader expire;

// This is class that describes you smart contract.
contract wallet {

    constructor() public {
        // Check that contract's public key is set
        require(tvm.pubkey() != 0, 101);
        // Check that message has signature (msg.pubkey() is not zero) and
        // message is signed with the owner's private key
        require(msg.pubkey() == tvm.pubkey(), 102);
        // The current smart contract agrees to buy some gas to finish the
        // current transaction. This actions required to process external
        // messages, which bring no value (henceno gas) with themselves.
        tvm.accept();
    }

  

    function sendValue(address dest, uint128 amount, bool bounce) public checkOwner() view {

        dest.transfer(amount, bounce, 0);
    }

     function sendValueAndPayComm(address dest, uint128 amount, bool bounce) public checkOwner() view {

        dest.transfer(amount, bounce, 0 + 1);
    }

     function sendAllValueAndDestroyed(address dest, bool bounce) public checkOwner() view {

        dest.transfer(1, bounce, 128 + 32);
    }

    modifier checkOwner() {
		require(msg.pubkey() == tvm.pubkey(), 102);
        tvm.accept();
		_;
	}

}
